/************ Add: Sequences ***************/

CREATE SEQUENCE bitacora_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE bitacora_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE credencial_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE credencial_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE localidad_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE localidad_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE sesion_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE sesion_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE usuario_credencial_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE usuario_credencial_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE usuario_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE usuario_id_seq IS 'DbWrench Autogenerated Sequence.';



/************ Update: Tables ***************/

/******************** Add Table: bitacora ************************/

/* Build Table Structure */
CREATE TABLE bitacora
(
	id BIGINT DEFAULT nextval('bitacora_id_seq'::regclass) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
	usuario_id BIGINT NOT NULL,
	accion VARCHAR(50) NOT NULL,
	descripcion VARCHAR(1024) NOT NULL,
	tabla VARCHAR(64) NOT NULL,
	registro BIGINT NULL
);

/* Add Primary Key */
ALTER TABLE bitacora ADD CONSTRAINT pkbitacora
	PRIMARY KEY (id);

/* Add Indexes */
CREATE INDEX "bitacora_accion_Idx" ON bitacora USING btree (accion);

CREATE INDEX "bitacora_created_at_Idx" ON bitacora USING btree (created_at);

CREATE INDEX "bitacora_tabla_Idx" ON bitacora USING btree (tabla);

CREATE INDEX "bitacora_usuario_id_Idx" ON bitacora USING btree (usuario_id);


/******************** Add Table: credencial ************************/

/* Build Table Structure */
CREATE TABLE credencial
(
	id BIGINT DEFAULT nextval('credencial_id_seq'::regclass) NOT NULL,
	actived BOOL DEFAULT 't' NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL,
	nombre VARCHAR(50) NOT NULL,
	descripcion VARCHAR(1024) NULL
);

/* Add Primary Key */
ALTER TABLE credencial ADD CONSTRAINT pkcredencial
	PRIMARY KEY (id);

/* Add Comments */
COMMENT ON COLUMN credencial.actived IS 'TRUE = activado ; FALSE = desactivado';

/* Add Indexes */
CREATE INDEX "credencial_actived_Idx" ON credencial USING btree (actived);

CREATE INDEX "credencial_deletedAt_Idx" ON credencial USING btree (deleted_at);

CREATE UNIQUE INDEX "credencial_nombre_Idx" ON credencial USING btree (nombre);


/******************** Add Table: localidad ************************/

/* Build Table Structure */
CREATE TABLE localidad
(
	id BIGINT DEFAULT nextval('localidad_id_seq'::regclass) NOT NULL,
	actived BOOL DEFAULT 't' NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL,
	nombre VARCHAR(50) NOT NULL,
	localidad_id BIGINT NULL
);

/* Add Primary Key */
ALTER TABLE localidad ADD CONSTRAINT pklocalidad
	PRIMARY KEY (id);

/* Add Comments */
COMMENT ON COLUMN localidad.actived IS 'TRUE = activado ; FALSE = desactivado';

/* Add Indexes */
CREATE INDEX "localidad_activado_Idx" ON localidad USING btree (actived);

CREATE INDEX "localidad_deleted_at_Idx" ON localidad USING btree (deleted_at);

CREATE INDEX "localidad_localidad_id_Idx" ON localidad USING btree (localidad_id);

CREATE INDEX "localidad_nombre_Idx" ON localidad USING btree (nombre);


/******************** Add Table: sesion ************************/

/* Build Table Structure */
CREATE TABLE sesion
(
	id BIGINT DEFAULT nextval('sesion_id_seq'::regclass) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
	usuario_id BIGINT NOT NULL,
	cookie VARCHAR(32) NOT NULL,
	ip_address VARCHAR(36) NOT NULL
);

/* Add Primary Key */
ALTER TABLE sesion ADD CONSTRAINT pksesion
	PRIMARY KEY (id);

/* Add Indexes */
CREATE UNIQUE INDEX "sesion_cookie_ip_address_Idx" ON sesion USING btree (cookie, ip_address);


/******************** Add Table: usuario ************************/

/* Build Table Structure */
CREATE TABLE usuario
(
	id BIGINT DEFAULT nextval('usuario_id_seq'::regclass) NOT NULL,
	actived BOOL DEFAULT 't' NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL,
	name_user VARCHAR(50) NOT NULL,
	password VARCHAR(32) NOT NULL,
	last_login_at TIMESTAMP NOT NULL
);

/* Add Primary Key */
ALTER TABLE usuario ADD CONSTRAINT pkusuario
	PRIMARY KEY (id);

/* Add Comments */
COMMENT ON COLUMN usuario.actived IS 'TRUE = activado ; FALSE = desactivado';

/* Add Indexes */
CREATE INDEX "usuario_actived_Idx" ON usuario USING btree (actived);

CREATE INDEX "usuario_deletedAt_Idx" ON usuario USING btree (deleted_at);

CREATE UNIQUE INDEX "usuario_nameUser_Idx" ON usuario USING btree (name_user);

CREATE INDEX "usuario_nameUser_password_Idx" ON usuario USING btree (name_user, password);


/******************** Add Table: usuario_credencial ************************/

/* Build Table Structure */
CREATE TABLE usuario_credencial
(
	id BIGINT DEFAULT nextval('usuario_credencial_id_seq'::regclass) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
	usuario_id BIGINT NOT NULL,
	credencial_id BIGINT NOT NULL
);

/* Add Primary Key */
ALTER TABLE usuario_credencial ADD CONSTRAINT pkusuario_credencial
	PRIMARY KEY (id);

/* Add Indexes */
CREATE INDEX "usuario_credencial_credencial_id_Idx" ON usuario_credencial USING btree (credencial_id);

CREATE INDEX "usuario_credencial_usuario_id_Idx" ON usuario_credencial USING btree (usuario_id);

CREATE UNIQUE INDEX "usuario_credencial_usuario_id_credencial_id_Idx" ON usuario_credencial USING btree (usuario_id, credencial_id);





/************ Add Foreign Keys ***************/

/* Add Foreign Key: fk_bitacora_usuario */
ALTER TABLE bitacora ADD CONSTRAINT fk_bitacora_usuario
	FOREIGN KEY (usuario_id) REFERENCES usuario (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_localidad_localidad */
ALTER TABLE localidad ADD CONSTRAINT fk_localidad_localidad
	FOREIGN KEY (localidad_id) REFERENCES localidad (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_sesion_usuario */
ALTER TABLE sesion ADD CONSTRAINT fk_sesion_usuario
	FOREIGN KEY (usuario_id) REFERENCES usuario (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_usuario_credencial_credencial */
ALTER TABLE usuario_credencial ADD CONSTRAINT fk_usuario_credencial_credencial
	FOREIGN KEY (credencial_id) REFERENCES credencial (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_usuario_credencial_usuario */
ALTER TABLE usuario_credencial ADD CONSTRAINT fk_usuario_credencial_usuario
	FOREIGN KEY (usuario_id) REFERENCES usuario (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;